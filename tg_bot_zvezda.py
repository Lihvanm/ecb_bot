from telegram import Update
from telegram.ext import Application, MessageHandler, filters, CommandHandler, ContextTypes
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = '8095859951:AAFGrYc5flFZk2EU8NNnsqpVWRJTGn009D4'

# ID —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã
TARGET_GROUP_ID = -1002437528572  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –≤–∞—à–µ–π —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã

# –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (100 –º–∏–Ω—É—Ç = 6000 —Å–µ–∫—É–Ω–¥)
PINNED_DURATION = 6000

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
last_pinned_time = 0

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞
ALLOWED_USER = "@Muzikant1429"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def check_admin_rights(context, chat_id):
    try:
        chat_member = await context.bot.get_chat_member(chat_id=chat_id, user_id=context.bot.id)
        return chat_member.status in ["administrator", "creator"]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —á–∞—Ç–µ {chat_id}: {e}")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async def is_admin_or_allowed_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    chat_id = update.message.chat.id
    if user.username == ALLOWED_USER[1:]:  # –£–±–∏—Ä–∞–µ–º "@" –∏–∑ ALLOWED_USER
        return True
    try:
        chat_member = await context.bot.get_chat_member(chat_id=chat_id, user_id=user.id)
        return chat_member.status in ["administrator", "creator"]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id}: {e}")
        return False

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset_pin_timer
async def reset_pin_timer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global last_pinned_time
    user = update.message.from_user
    chat_id = update.message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not await is_admin_or_allowed_user(update, context):
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
    last_pinned_time = 0
    logger.info(f"–¢–∞–π–º–µ—Ä –∑–∞–∫—Ä–µ–ø–∞ —Å–±—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.username} –≤ —á–∞—Ç–µ {chat_id}.")
    await update.message.reply_text("–¢–∞–π–º–µ—Ä –∑–∞–∫—Ä–µ–ø–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω.")

    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —á–∞—Ç–∞
    try:
        await update.message.delete()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global last_pinned_time

    try:
        message = update.message
        if not message:
            logger.warning("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞.")
            return

        chat_id = message.chat.id
        text = message.text
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ {chat_id}: {text}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
        if message.chat.type not in ['group', 'supergroup']:
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ –≥—Ä—É–ø–ø—ã. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å "–∑–≤–µ–∑–¥–∞" (–≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ), "–∑—á" (–≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ) –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç üåü
        if not text or (
            not text.lower().startswith("–∑–≤–µ–∑–¥–∞") and
            not text.lower().startswith("–∑—á") and
            "üåü" not in text
        ):
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É—Å–ª–æ–≤–∏—è–º. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º.")
            return

        # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 100 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
        current_time = time.time()
        if current_time - last_pinned_time < PINNED_DURATION:
            logger.info(f"–ü—Ä–æ—à–ª–æ {current_time - last_pinned_time} —Å–µ–∫—É–Ω–¥. –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            await message.delete()
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø–µ
        if not await check_admin_rights(context, chat_id):
            logger.warning(f"–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –≥—Ä—É–ø–ø–µ {chat_id}.")
            return

        # –û—Ç–∫—Ä–µ–ø–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await context.bot.unpin_chat_message(chat_id=chat_id)
            logger.info(f"–û—Ç–∫—Ä–µ–ø–ª–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ {chat_id}.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ {chat_id}: {e}")

        # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await message.pin()
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø–µ {chat_id}.")
            last_pinned_time = current_time  # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ {chat_id}: {e}")

        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –¥—Ä—É–≥–æ–π –≥—Ä—É–ø–ø—ã (–Ω–µ —Ü–µ–ª–µ–≤–æ–π), –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –µ–≥–æ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É
        if chat_id != TARGET_GROUP_ID:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
            if not await check_admin_rights(context, TARGET_GROUP_ID):
                logger.warning("–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ.")
                return

            # –£–¥–∞–ª—è–µ–º –º–∞—Ä–∫–µ—Ä "–∑—á" –∏–ª–∏ "–∑–≤–µ–∑–¥–∞" –∏ –ø—Ä–æ–±–µ–ª
            if text.lower().startswith("–∑—á"):
                new_text = text[len("–∑—á"):].strip()
            elif text.lower().startswith("–∑–≤–µ–∑–¥–∞"):
                new_text = text[len("–∑–≤–µ–∑–¥–∞"):].strip()
            else:
                new_text = text.replace("üåü", "").strip()  # –£–±–∏—Ä–∞–µ–º —Å–º–∞–π–ª–∏–∫ üåü

            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É
            try:
                forwarded_message = await context.bot.send_message(chat_id=TARGET_GROUP_ID, text=new_text)
                logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É {TARGET_GROUP_ID}.")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É {TARGET_GROUP_ID}: {e}")
                return

            # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
            try:
                await forwarded_message.pin()
                logger.info(f"–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ {TARGET_GROUP_ID}.")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Application
    application = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("timer", reset_pin_timer))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")


if __name__ == '__main__':
    main()
