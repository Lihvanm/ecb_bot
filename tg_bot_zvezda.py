from telegram import Update
from telegram.ext import Application, MessageHandler, filters, CommandHandler, ContextTypes
import logging
import time

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è username –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–∫—Ä–µ–ø–∏–ª –∑–≤–µ–∑–¥—É (–ø–æ –≥—Ä—É–ø–ø–∞–º)
last_user_username = {}  # {chat_id: username}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = '8095859951:AAFGrYc5flFZk2EU8NNnsqpVWRJTGn009D4'

# ID —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è)
TARGET_GROUP_ID = -1002437528572

# –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (45 –º–∏–Ω—É—Ç = 2700 —Å–µ–∫—É–Ω–¥)
PINNED_DURATION = 2700  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ 45 –º–∏–Ω—É—Ç

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è (–ø–æ –≥—Ä—É–ø–ø–∞–º)
last_pinned_times = {}  # {chat_id: timestamp}

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞
ALLOWED_USER = "@Muzikant1429"

# –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ (–∞–Ω—Ç–∏–º–∞—Ç)
BANNED_WORDS = ["–±–ª—è", "—Ö—É–π", "–ø–∏–∑–¥", "–Ω–∞—Ö—É", "–≥–∞–Ω–¥–æ–Ω", "–ø–∏–¥—Ä", "–ø–∏–¥–æ—Ä–∞—Å", "—à–∞–ª–∞–≤", "—à–ª—é—Ö", "–º—Ä–∞–∑—å"]

# –õ–∏–º–∏—Ç—ã –¥–ª—è –∞–Ω—Ç–∏—Å–ø–∞–º–∞
SPAM_LIMIT = 5  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
SPAM_INTERVAL = 10  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
user_message_counts = {}  # {user_id: [timestamp1, timestamp2, ...]}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def check_admin_rights(context, chat_id):
    try:
        chat_member = await context.bot.get_chat_member(chat_id=chat_id, user_id=context.bot.id)
        return chat_member.status in ["administrator", "creator"]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —á–∞—Ç–µ {chat_id}: {e}")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async def is_admin_or_allowed_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    chat_id = update.message.chat.id
    if user.username == ALLOWED_USER[1:]:  # –£–±–∏—Ä–∞–µ–º "@" –∏–∑ ALLOWED_USER
        return True
    try:
        chat_member = await context.bot.get_chat_member(chat_id=chat_id, user_id=user.id)
        return chat_member.status in ["administrator", "creator"]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id}: {e}")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
async def delete_system_message(context: ContextTypes.DEFAULT_TYPE):
    job = context.job
    try:
        await context.bot.delete_message(chat_id=job.chat_id, message_id=job.data)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        message = update.message
        if not message:
            logger.warning("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞.")
            return

        chat_id = message.chat.id
        text = message.text
        user = message.from_user
        current_time = time.time()

        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ {chat_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}: {text}")

        # –ê–Ω—Ç–∏—Å–ø–∞–º
        if user.id not in user_message_counts:
            user_message_counts[user.id] = []
        user_message_counts[user.id] = [t for t in user_message_counts[user.id] if current_time - t < SPAM_INTERVAL]
        user_message_counts[user.id].append(current_time)

        if len(user_message_counts[user.id]) > SPAM_LIMIT:
            await message.delete()
            warning_message = await update.message.reply_text(f"{user.username}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å–ø–∞–º—å—Ç–µ!")
            logger.info(f"–°–ø–∞–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} –≤ —á–∞—Ç–µ {chat_id}.")
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã
            context.job_queue.run_once(delete_system_message, 180, data=warning_message.message_id, chat_id=chat_id)
            return

        # –ê–Ω—Ç–∏–º–∞—Ç
        if any(word in text.lower() for word in BANNED_WORDS):
            await message.delete()
            warning_message = await context.bot.send_message(
                chat_id=chat_id,
                text="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è."
            )
            logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –º–∞—Ç –≤ —á–∞—Ç–µ {chat_id}.")
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
            context.job_queue.run_once(delete_system_message, 60, data=warning_message.message_id, chat_id=chat_id)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
        if message.chat.type not in ['group', 'supergroup']:
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ –≥—Ä—É–ø–ø—ã. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å "–∑–≤–µ–∑–¥–∞", "–∑—á" –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç üåü
        if not text or (
            not text.lower().startswith("–∑–≤–µ–∑–¥–∞") and
            not text.lower().startswith("–∑—á") and
            "üåü" not in text
        ):
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É—Å–ª–æ–≤–∏—è–º. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º.")
            return

        # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 45 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
        last_pinned_time = last_pinned_times.get(chat_id, 0)
        if current_time - last_pinned_time < PINNED_DURATION:
            logger.info(f"–ü—Ä–æ—à–ª–æ {current_time - last_pinned_time} —Å–µ–∫—É–Ω–¥. –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            await message.delete()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –º–µ–Ω–µ–µ 3 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫—Ä–µ–ø–∞
            if current_time - last_pinned_time < 180:
                last_user = last_user_username.get(chat_id, "")  # –ü–æ–ª—É—á–∞–µ–º username –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                thanks_message = await context.bot.send_message(
                    chat_id=chat_id,
                    text=(
                        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –±–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å! –ó–≤–µ–∑–¥–∞ —á–∞—Å–∞ —É–∂–µ –∑–∞–º–µ—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º "
                        f"{'@' + last_user if last_user else '–¥–æ –í–∞—Å'} –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ. "
                        f"–ù–∞–¥–µ—é—Å—å, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –∏–º–µ–Ω–Ω–æ –í—ã —Å—Ç–∞–Ω–µ—Ç–µ –Ω–∞—à–µ–π üåü!!!"
                    )
                )
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –≤ —á–∞—Ç–µ {chat_id}.")
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã
                context.job_queue.run_once(delete_system_message, 180, data=thanks_message.message_id, chat_id=chat_id)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø–µ
        if not await check_admin_rights(context, chat_id):
            logger.warning(f"–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –≥—Ä—É–ø–ø–µ {chat_id}.")
            return

        # –û—Ç–∫—Ä–µ–ø–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await context.bot.unpin_chat_message(chat_id=chat_id)
            logger.info(f"–û—Ç–∫—Ä–µ–ø–ª–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ {chat_id}.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ {chat_id}: {e}")

        # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await message.pin()
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø–µ {chat_id}.")
            last_pinned_times[chat_id] = current_time  # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
            last_user_username[chat_id] = user.username if user.username else None  # –°–æ—Ö—Ä–∞–Ω—è–µ–º username

            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É
            if chat_id != TARGET_GROUP_ID:
                if not await check_admin_rights(context, TARGET_GROUP_ID):
                    logger.warning("–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ.")
                    return

                # –£–¥–∞–ª—è–µ–º –º–∞—Ä–∫–µ—Ä "–∑—á" –∏–ª–∏ "–∑–≤–µ–∑–¥–∞" –∏ –ø—Ä–æ–±–µ–ª
                if text.lower().startswith("–∑—á"):
                    new_text = text[len("–∑—á"):].strip()
                elif text.lower().startswith("–∑–≤–µ–∑–¥–∞"):
                    new_text = text[len("–∑–≤–µ–∑–¥–∞"):].strip()
                else:
                    new_text = text.replace("üåü", "").strip()  # –£–±–∏—Ä–∞–µ–º —Å–º–∞–π–ª–∏–∫ üåü

                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É
                try:
                    forwarded_message = await context.bot.send_message(chat_id=TARGET_GROUP_ID, text=new_text)
                    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É {TARGET_GROUP_ID}.")
                    await forwarded_message.pin()
                    logger.info(f"–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ {TARGET_GROUP_ID}.")
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É {TARGET_GROUP_ID}: {e}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ {chat_id}: {e}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset_pin_timer
async def reset_pin_timer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat.id
    user = update.message.from_user

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not await is_admin_or_allowed_user(update, context):
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
    last_pinned_times[chat_id] = 0
    logger.info(f"–¢–∞–π–º–µ—Ä –∑–∞–∫—Ä–µ–ø–∞ —Å–±—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.username} –≤ —á–∞—Ç–µ {chat_id}.")
    success_message = await update.message.reply_text("–¢–∞–π–º–µ—Ä –∑–∞–∫—Ä–µ–ø–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω.")

    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã
    try:
        await update.message.delete()
        context.job_queue.run_once(delete_system_message, 180, data=success_message.message_id, chat_id=chat_id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ban
async def ban_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    chat_id = update.message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not await is_admin_or_allowed_user(update, context):
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å
    target_user = None
    reply_to_message = update.message.reply_to_message

    # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if reply_to_message:
        target_user = reply_to_message.from_user
    else:
        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if context.args and context.args[0].startswith("@"):
            username = context.args[0][1:]  # –£–±–∏—Ä–∞–µ–º "@" –∏–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                chat_members = await context.bot.get_chat_member(chat_id=chat_id, user_id=user.id)
                for member in chat_members:
                    if member.user.username.lower() == username.lower():
                        target_user = member.user
                        break
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
                await update.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}.")
                return

    # –ï—Å–ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    if not target_user:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    # –ë–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        await context.bot.ban_chat_member(chat_id=chat_id, user_id=target_user.id)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user.username} –∑–∞–±–∞–Ω–µ–Ω –≤ —á–∞—Ç–µ {chat_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.username}.")
        await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{target_user.username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user.id} –≤ —á–∞—Ç–µ {chat_id}: {e}")
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞.")

    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —á–∞—Ç–∞
    try:
        await update.message.delete()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mute
async def mute_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    chat_id = update.message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not await is_admin_or_allowed_user(update, context):
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å
    target_user = None
    reply_to_message = update.message.reply_to_message

    # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if reply_to_message:
        target_user = reply_to_message.from_user
    else:
        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if context.args and context.args[0].startswith("@"):
            username = context.args[0][1:]  # –£–±–∏—Ä–∞–µ–º "@" –∏–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                chat_members = await context.bot.get_chat_member(chat_id=chat_id, user_id=user.id)
                for member in chat_members:
                    if member.user.username.lower() == username.lower():
                        target_user = member.user
                        break
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
                await update.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}.")
                return

    # –ï—Å–ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    if not target_user:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –º—É—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    mute_duration = None
    if len(context.args) >= 1:
        try:
            # –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî —ç—Ç–æ –≤—Ä–µ–º—è (—á–∏—Å–ª–æ)
            mute_duration = int(context.args[-1]) * 60  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∏–Ω—É—Ç—ã –≤ —Å–µ–∫—É–Ω–¥—ã
        except ValueError:
            await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö.")
            return

    if mute_duration is None:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –º—É—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö.")
        return

    # –ú—É—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        await context.bot.restrict_chat_member(
            chat_id=chat_id,
            user_id=target_user.id,
            permissions={"can_send_messages": False},
            until_date=time.time() + mute_duration
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user.username} –∑–∞–º—É—á–µ–Ω –≤ —á–∞—Ç–µ {chat_id} –Ω–∞ {mute_duration // 60} –º–∏–Ω—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.username}.")
        await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{target_user.username} –∑–∞–º—É—á–µ–Ω –Ω–∞ {mute_duration // 60} –º–∏–Ω—É—Ç.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user.id} –≤ —á–∞—Ç–µ {chat_id}: {e}")
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞.")

    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —á–∞—Ç–∞
    try:
        await update.message.delete()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Application
    application = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("timer", reset_pin_timer))
    application.add_handler(CommandHandler("ban", ban_user))
    application.add_handler(CommandHandler("mute", mute_user))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")

if __name__ == '__main__':
    main()
